{"version":3,"file":"index.browser.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nconst info = <const>{\n  name: \"html-button-response\",\n  parameters: {\n    /** The HTML string to be displayed */\n    stimulus: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Stimulus\",\n      default: undefined,\n    },\n    /** Array containing the label(s) for the button(s). */\n    choices: {\n      type: ParameterType.STRING,\n      pretty_name: \"Choices\",\n      default: undefined,\n      array: true,\n    },\n    /** The HTML for creating button. Can create own style. Use the \"%choice%\" string to indicate where the label from the choices parameter should be inserted. */\n    button_html: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Button HTML\",\n      default: '<button class=\"jspsych-btn\">%choice%</button>',\n      array: true,\n    },\n    /** Any content here will be displayed under the button(s). */\n    prompt: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Prompt\",\n      default: null,\n    },\n    /** How long to show the stimulus. */\n    stimulus_duration: {\n      type: ParameterType.INT,\n      pretty_name: \"Stimulus duration\",\n      default: null,\n    },\n    /** How long to show the trial. */\n    trial_duration: {\n      type: ParameterType.INT,\n      pretty_name: \"Trial duration\",\n      default: null,\n    },\n    /** The vertical margin of the button. */\n    margin_vertical: {\n      type: ParameterType.STRING,\n      pretty_name: \"Margin vertical\",\n      default: \"0px\",\n    },\n    /** The horizontal margin of the button. */\n    margin_horizontal: {\n      type: ParameterType.STRING,\n      pretty_name: \"Margin horizontal\",\n      default: \"8px\",\n    },\n    /** If true, then trial will end when user responds. */\n    response_ends_trial: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Response ends trial\",\n      default: true,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * html-button-response\n * jsPsych plugin for displaying a stimulus and getting a button response\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/plugins/jspsych-html-button-response/ html-button-response plugin documentation on jspsych.org}\n */\nclass HtmlButtonResponsePlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    // display stimulus\n    var html = '<div id=\"jspsych-html-button-response-stimulus\">' + trial.stimulus + \"</div>\";\n\n    //display buttons\n    var buttons = [];\n    if (Array.isArray(trial.button_html)) {\n      if (trial.button_html.length == trial.choices.length) {\n        buttons = trial.button_html;\n      } else {\n        console.error(\n          \"Error in html-button-response plugin. The length of the button_html array does not equal the length of the choices array\"\n        );\n      }\n    } else {\n      for (var i = 0; i < trial.choices.length; i++) {\n        buttons.push(trial.button_html);\n      }\n    }\n    html += '<div id=\"jspsych-html-button-response-btngroup\">';\n    for (var i = 0; i < trial.choices.length; i++) {\n      var str = buttons[i].replace(/%choice%/g, trial.choices[i]);\n      html +=\n        '<div class=\"jspsych-html-button-response-button\" style=\"display: inline-block; margin:' +\n        trial.margin_vertical +\n        \" \" +\n        trial.margin_horizontal +\n        '\" id=\"jspsych-html-button-response-button-' +\n        i +\n        '\" data-choice=\"' +\n        i +\n        '\">' +\n        str +\n        \"</div>\";\n    }\n    html += \"</div>\";\n\n    //show prompt if there is one\n    if (trial.prompt !== null) {\n      html += trial.prompt;\n    }\n    display_element.innerHTML = html;\n\n    // start time\n    var start_time = performance.now();\n\n    // add event listeners to buttons\n    for (var i = 0; i < trial.choices.length; i++) {\n      display_element\n        .querySelector(\"#jspsych-html-button-response-button-\" + i)\n        .addEventListener(\"click\", (e) => {\n          var btn_el = e.currentTarget as HTMLButtonElement;\n          var choice = btn_el.getAttribute(\"data-choice\"); // don't use dataset for jsdom compatibility\n          after_response(choice);\n        });\n    }\n\n    // store response\n    var response = {\n      rt: null,\n      button: null,\n    };\n\n    // function to end trial when it is time\n    const end_trial = () => {\n      // kill any remaining setTimeout handlers\n      this.jsPsych.pluginAPI.clearAllTimeouts();\n\n      // gather the data to store for the trial\n      var trial_data = {\n        rt: response.rt,\n        stimulus: trial.stimulus,\n        response: response.button,\n      };\n\n      // clear the display\n      display_element.innerHTML = \"\";\n\n      // move on to the next trial\n      this.jsPsych.finishTrial(trial_data);\n    };\n\n    // function to handle responses by the subject\n    function after_response(choice) {\n      // measure rt\n      var end_time = performance.now();\n      var rt = Math.round(end_time - start_time);\n      response.button = parseInt(choice);\n      response.rt = rt;\n\n      // after a valid response, the stimulus will have the CSS class 'responded'\n      // which can be used to provide visual feedback that a response was recorded\n      display_element.querySelector(\"#jspsych-html-button-response-stimulus\").className +=\n        \" responded\";\n\n      // disable all the buttons after a response\n      var btns = document.querySelectorAll(\".jspsych-html-button-response-button button\");\n      for (var i = 0; i < btns.length; i++) {\n        //btns[i].removeEventListener('click');\n        btns[i].setAttribute(\"disabled\", \"disabled\");\n      }\n\n      if (trial.response_ends_trial) {\n        end_trial();\n      }\n    }\n\n    // hide image if timing is set\n    if (trial.stimulus_duration !== null) {\n      this.jsPsych.pluginAPI.setTimeout(() => {\n        display_element.querySelector<HTMLElement>(\n          \"#jspsych-html-button-response-stimulus\"\n        ).style.visibility = \"hidden\";\n      }, trial.stimulus_duration);\n    }\n\n    // end trial if time limit is set\n    if (trial.trial_duration !== null) {\n      this.jsPsych.pluginAPI.setTimeout(end_trial, trial.trial_duration);\n    }\n  }\n\n  simulate(\n    trial: TrialType<Info>,\n    simulation_mode,\n    simulation_options: any,\n    load_callback: () => void\n  ) {\n    if (simulation_mode == \"data-only\") {\n      load_callback();\n      this.simulate_data_only(trial, simulation_options);\n    }\n    if (simulation_mode == \"visual\") {\n      this.simulate_visual(trial, simulation_options, load_callback);\n    }\n  }\n\n  private create_simulation_data(trial: TrialType<Info>, simulation_options) {\n    const default_data = {\n      stimulus: trial.stimulus,\n      rt: this.jsPsych.randomization.sampleExGaussian(500, 50, 1 / 150, true),\n      response: this.jsPsych.randomization.randomInt(0, trial.choices.length - 1),\n    };\n\n    const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n\n    this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);\n\n    return data;\n  }\n\n  private simulate_data_only(trial: TrialType<Info>, simulation_options) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    this.jsPsych.finishTrial(data);\n  }\n\n  private simulate_visual(trial: TrialType<Info>, simulation_options, load_callback: () => void) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    const display_element = this.jsPsych.getDisplayElement();\n\n    this.trial(display_element, trial);\n    load_callback();\n\n    if (data.rt !== null) {\n      this.jsPsych.pluginAPI.clickTarget(\n        display_element.querySelector(`div[data-choice=\"${data.response}\"] button`),\n        data.rt\n      );\n    }\n  }\n}\n\nexport default HtmlButtonResponsePlugin;\n"],"names":["ParameterType"],"mappings":"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"}