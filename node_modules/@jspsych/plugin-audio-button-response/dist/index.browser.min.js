var jsPsychAudioButtonResponse=function(t){"use strict";const e={name:"audio-button-response",parameters:{stimulus:{type:t.ParameterType.AUDIO,pretty_name:"Stimulus",default:void 0},choices:{type:t.ParameterType.STRING,pretty_name:"Choices",default:void 0,array:!0},button_html:{type:t.ParameterType.HTML_STRING,pretty_name:"Button HTML",default:'<button class="jspsych-btn">%choice%</button>',array:!0},prompt:{type:t.ParameterType.HTML_STRING,pretty_name:"Prompt",default:null},trial_duration:{type:t.ParameterType.INT,pretty_name:"Trial duration",default:null},margin_vertical:{type:t.ParameterType.STRING,pretty_name:"Margin vertical",default:"0px"},margin_horizontal:{type:t.ParameterType.STRING,pretty_name:"Margin horizontal",default:"8px"},response_ends_trial:{type:t.ParameterType.BOOL,pretty_name:"Response ends trial",default:!0},trial_ends_after_audio:{type:t.ParameterType.BOOL,pretty_name:"Trial ends after audio",default:!1},response_allowed_while_playing:{type:t.ParameterType.BOOL,pretty_name:"Response allowed while playing",default:!0}}};class a{constructor(t){this.jsPsych=t}trial(t,e,a){let i;var n,r=this.jsPsych.pluginAPI.audioContext(),s={rt:null,button:null};this.jsPsych.pluginAPI.getAudioBuffer(e.stimulus).then((t=>{null!==r?(this.audio=r.createBufferSource(),this.audio.buffer=t,this.audio.connect(r.destination)):(this.audio=t,this.audio.currentTime=0),o()})).catch((t=>{console.error(`Failed to load audio file "${e.stimulus}". Try checking the file path. We recommend using the preload plugin to load audio files.`),console.error(t)}));const o=()=>{e.trial_ends_after_audio&&this.audio.addEventListener("ended",l),e.response_allowed_while_playing||e.trial_ends_after_audio||this.audio.addEventListener("ended",c);var i=[];if(Array.isArray(e.button_html))e.button_html.length==e.choices.length?i=e.button_html:console.error("Error in audio-button-response plugin. The length of the button_html array does not equal the length of the choices array");else for(var s=0;s<e.choices.length;s++)i.push(e.button_html);var o='<div id="jspsych-audio-button-response-btngroup">';for(s=0;s<e.choices.length;s++){var u=i[s].replace(/%choice%/g,e.choices[s]);o+='<div class="jspsych-audio-button-response-button" style="cursor: pointer; display: inline-block; margin:'+e.margin_vertical+" "+e.margin_horizontal+'" id="jspsych-audio-button-response-button-'+s+'" data-choice="'+s+'">'+u+"</div>"}o+="</div>",null!==e.prompt&&(o+=e.prompt),t.innerHTML=o,e.response_allowed_while_playing?c():d(),n=performance.now(),null!==r?(n=r.currentTime,this.audio.start(n)):this.audio.play(),null!==e.trial_duration&&this.jsPsych.pluginAPI.setTimeout((()=>{l()}),e.trial_duration),a()};const l=()=>{this.jsPsych.pluginAPI.clearAllTimeouts(),null!==r?this.audio.stop():this.audio.pause(),this.audio.removeEventListener("ended",l),this.audio.removeEventListener("ended",c);var a={rt:s.rt,stimulus:e.stimulus,response:s.button};t.innerHTML="",this.jsPsych.finishTrial(a),i()};function u(t){!function(t){var a=performance.now(),i=Math.round(a-n);null!==r&&(a=r.currentTime,i=Math.round(1e3*(a-n))),s.button=parseInt(t),s.rt=i,d(),e.response_ends_trial&&l()}(t.currentTarget.getAttribute("data-choice"))}function d(){for(var t=document.querySelectorAll(".jspsych-audio-button-response-button"),e=0;e<t.length;e++){var a=t[e].querySelector("button");a&&(a.disabled=!0),t[e].removeEventListener("click",u)}}function c(){for(var t=document.querySelectorAll(".jspsych-audio-button-response-button"),e=0;e<t.length;e++){var a=t[e].querySelector("button");a&&(a.disabled=!1),t[e].addEventListener("click",u)}}return new Promise((t=>{i=t}))}simulate(t,e,a,i){"data-only"==e&&(i(),this.simulate_data_only(t,a)),"visual"==e&&this.simulate_visual(t,a,i)}create_simulation_data(t,e){const a={stimulus:t.stimulus,rt:this.jsPsych.randomization.sampleExGaussian(500,50,1/150,!0),response:this.jsPsych.randomization.randomInt(0,t.choices.length-1)},i=this.jsPsych.pluginAPI.mergeSimulationData(a,e);return this.jsPsych.pluginAPI.ensureSimulationDataConsistency(t,i),i}simulate_data_only(t,e){const a=this.create_simulation_data(t,e);this.jsPsych.finishTrial(a)}simulate_visual(t,e,a){const i=this.create_simulation_data(t,e),n=this.jsPsych.getDisplayElement(),r=()=>{null!==i.rt&&this.jsPsych.pluginAPI.clickTarget(n.querySelector(`div[data-choice="${i.response}"] button`),i.rt)};this.trial(n,t,(()=>{a(),t.response_allowed_while_playing?r():this.audio.addEventListener("ended",r)}))}}return a.info=e,a}(jsPsychModule);
//# sourceMappingURL=index.browser.min.js.map
