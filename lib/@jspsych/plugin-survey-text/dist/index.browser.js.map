{"version":3,"file":"index.browser.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nconst info = <const>{\n  name: \"survey-text\",\n  parameters: {\n    questions: {\n      type: ParameterType.COMPLEX,\n      array: true,\n      pretty_name: \"Questions\",\n      default: undefined,\n      nested: {\n        /** Question prompt. */\n        prompt: {\n          type: ParameterType.HTML_STRING,\n          pretty_name: \"Prompt\",\n          default: undefined,\n        },\n        /** Placeholder text in the response text box. */\n        placeholder: {\n          type: ParameterType.STRING,\n          pretty_name: \"Placeholder\",\n          default: \"\",\n        },\n        /** The number of rows for the response text box. */\n        rows: {\n          type: ParameterType.INT,\n          pretty_name: \"Rows\",\n          default: 1,\n        },\n        /** The number of columns for the response text box. */\n        columns: {\n          type: ParameterType.INT,\n          pretty_name: \"Columns\",\n          default: 40,\n        },\n        /** Whether or not a response to this question must be given in order to continue. */\n        required: {\n          type: ParameterType.BOOL,\n          pretty_name: \"Required\",\n          default: false,\n        },\n        /** Name of the question in the trial data. If no name is given, the questions are named Q0, Q1, etc. */\n        name: {\n          type: ParameterType.STRING,\n          pretty_name: \"Question Name\",\n          default: \"\",\n        },\n      },\n    },\n    /** If true, the order of the questions in the 'questions' array will be randomized. */\n    randomize_question_order: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Randomize Question Order\",\n      default: false,\n    },\n    /** HTML-formatted string to display at top of the page above all of the questions. */\n    preamble: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Preamble\",\n      default: null,\n    },\n    /** Label of the button to submit responses. */\n    button_label: {\n      type: ParameterType.STRING,\n      pretty_name: \"Button label\",\n      default: \"Continue\",\n    },\n    /** Setting this to true will enable browser auto-complete or auto-fill for the form. */\n    autocomplete: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Allow autocomplete\",\n      default: false,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **survey-text**\n *\n * jsPsych plugin for free text response survey questions\n *\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/plugins/jspsych-survey-text/ survey-text plugin documentation on jspsych.org}\n */\nclass SurveyTextPlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    for (var i = 0; i < trial.questions.length; i++) {\n      if (typeof trial.questions[i].rows == \"undefined\") {\n        trial.questions[i].rows = 1;\n      }\n    }\n    for (var i = 0; i < trial.questions.length; i++) {\n      if (typeof trial.questions[i].columns == \"undefined\") {\n        trial.questions[i].columns = 40;\n      }\n    }\n    for (var i = 0; i < trial.questions.length; i++) {\n      if (typeof trial.questions[i].value == \"undefined\") {\n        trial.questions[i].value = \"\";\n      }\n    }\n\n    var html = \"\";\n    // show preamble text\n    if (trial.preamble !== null) {\n      html +=\n        '<div id=\"jspsych-survey-text-preamble\" class=\"jspsych-survey-text-preamble\">' +\n        trial.preamble +\n        \"</div>\";\n    }\n    // start form\n    if (trial.autocomplete) {\n      html += '<form id=\"jspsych-survey-text-form\">';\n    } else {\n      html += '<form id=\"jspsych-survey-text-form\" autocomplete=\"off\">';\n    }\n    // generate question order\n    var question_order = [];\n    for (var i = 0; i < trial.questions.length; i++) {\n      question_order.push(i);\n    }\n    if (trial.randomize_question_order) {\n      question_order = this.jsPsych.randomization.shuffle(question_order);\n    }\n\n    // add questions\n    for (var i = 0; i < trial.questions.length; i++) {\n      var question = trial.questions[question_order[i]];\n      var question_index = question_order[i];\n      html +=\n        '<div id=\"jspsych-survey-text-' +\n        question_index +\n        '\" class=\"jspsych-survey-text-question\" style=\"margin: 2em 0em;\">';\n      html += '<p class=\"jspsych-survey-text\">' + question.prompt + \"</p>\";\n      var autofocus = i == 0 ? \"autofocus\" : \"\";\n      var req = question.required ? \"required\" : \"\";\n      if (question.rows == 1) {\n        html +=\n          '<input type=\"text\" id=\"input-' +\n          question_index +\n          '\"  name=\"#jspsych-survey-text-response-' +\n          question_index +\n          '\" data-name=\"' +\n          question.name +\n          '\" size=\"' +\n          question.columns +\n          '\" ' +\n          autofocus +\n          \" \" +\n          req +\n          ' placeholder=\"' +\n          question.placeholder +\n          '\"></input>';\n      } else {\n        html +=\n          '<textarea id=\"input-' +\n          question_index +\n          '\" name=\"#jspsych-survey-text-response-' +\n          question_index +\n          '\" data-name=\"' +\n          question.name +\n          '\" cols=\"' +\n          question.columns +\n          '\" rows=\"' +\n          question.rows +\n          '\" ' +\n          autofocus +\n          \" \" +\n          req +\n          ' placeholder=\"' +\n          question.placeholder +\n          '\"></textarea>';\n      }\n      html += \"</div>\";\n    }\n\n    // add submit button\n    html +=\n      '<input type=\"submit\" id=\"jspsych-survey-text-next\" class=\"jspsych-btn jspsych-survey-text\" value=\"' +\n      trial.button_label +\n      '\"></input>';\n\n    html += \"</form>\";\n    display_element.innerHTML = html;\n\n    // backup in case autofocus doesn't work\n    display_element.querySelector<HTMLInputElement>(\"#input-\" + question_order[0]).focus();\n\n    display_element.querySelector(\"#jspsych-survey-text-form\").addEventListener(\"submit\", (e) => {\n      e.preventDefault();\n      // measure response time\n      var endTime = performance.now();\n      var response_time = Math.round(endTime - startTime);\n\n      // create object to hold responses\n      var question_data = {};\n\n      for (var index = 0; index < trial.questions.length; index++) {\n        var id = \"Q\" + index;\n        var q_element = document\n          .querySelector(\"#jspsych-survey-text-\" + index)\n          .querySelector(\"textarea, input\") as HTMLInputElement;\n        var val = q_element.value;\n        var name = q_element.attributes[\"data-name\"].value;\n        if (name == \"\") {\n          name = id;\n        }\n        var obje = {};\n        obje[name] = val;\n        Object.assign(question_data, obje);\n      }\n      // save data\n      var trialdata = {\n        rt: response_time,\n        response: question_data,\n      };\n\n      display_element.innerHTML = \"\";\n\n      // next trial\n      this.jsPsych.finishTrial(trialdata);\n    });\n\n    var startTime = performance.now();\n  }\n\n  simulate(\n    trial: TrialType<Info>,\n    simulation_mode,\n    simulation_options: any,\n    load_callback: () => void\n  ) {\n    if (simulation_mode == \"data-only\") {\n      load_callback();\n      this.simulate_data_only(trial, simulation_options);\n    }\n    if (simulation_mode == \"visual\") {\n      this.simulate_visual(trial, simulation_options, load_callback);\n    }\n  }\n\n  private create_simulation_data(trial: TrialType<Info>, simulation_options) {\n    const question_data = {};\n    let rt = 1000;\n\n    for (const q of trial.questions) {\n      const name = q.name ? q.name : `Q${trial.questions.indexOf(q)}`;\n      const ans_words =\n        q.rows == 1\n          ? this.jsPsych.randomization.sampleExponential(0.25)\n          : this.jsPsych.randomization.randomInt(1, 10) * q.rows;\n      question_data[name] = this.jsPsych.randomization.randomWords({\n        exactly: ans_words,\n        join: \" \",\n      });\n      rt += this.jsPsych.randomization.sampleExGaussian(2000, 400, 0.004, true);\n    }\n\n    const default_data = {\n      response: question_data,\n      rt: rt,\n    };\n\n    const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n\n    this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);\n\n    return data;\n  }\n\n  private simulate_data_only(trial: TrialType<Info>, simulation_options) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    this.jsPsych.finishTrial(data);\n  }\n\n  private simulate_visual(trial: TrialType<Info>, simulation_options, load_callback: () => void) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    const display_element = this.jsPsych.getDisplayElement();\n\n    this.trial(display_element, trial);\n    load_callback();\n\n    const answers = Object.entries(data.response).map((x) => {\n      return x[1] as string;\n    });\n    for (let i = 0; i < answers.length; i++) {\n      this.jsPsych.pluginAPI.fillTextInput(\n        display_element.querySelector(`#input-${i}`),\n        answers[i],\n        ((data.rt - 1000) / answers.length) * (i + 1)\n      );\n    }\n\n    this.jsPsych.pluginAPI.clickTarget(\n      display_element.querySelector(\"#jspsych-survey-text-next\"),\n      data.rt\n    );\n  }\n}\n\nexport default SurveyTextPlugin;\n"],"names":["ParameterType"],"mappings":"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"}